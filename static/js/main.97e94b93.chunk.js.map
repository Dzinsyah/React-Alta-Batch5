{"version":3,"sources":["logo.svg","redux/reducer/newsReducer.js","redux/reducer/userReducer.js","redux/index.js","component/Search.jsx","component/Navigation.jsx","pages/Home.jsx","component/ListNews.jsx","pages/News.jsx","pages/NotMatch.jsx","pages/Profile.jsx","pages/SignIn.jsx","redux/actions/actionUser.js","routes/MainRoutes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","listNews","isLoading","search","full_name","email","api_key","is_login","namaPengguna","kataKunci","rootReducer","combineReducers","news","stateNews","action","type","payload","user","userState","target","name","value","store","createStore","applyMiddleware","thunk","subscribe","console","warn","getState","Search","props","className","title","id","placeholder","onChange","doSearch","keyword","logoWrapper","display","width","float","textAlign","Navigation","changeRouter","category","a","handleRouter","history","replace","postSignout","localStorage","removeItem","push","style","src","logo","alt","to","onClick","this","getNews","React","Component","Home","Fragment","textalign","connect","state","haha","maxWidth","ListNews","url","href","img","content","apiKey","baseUrl","urlHeadline","News","componentDidMount","match","params","paramCategory","setState","axios","get","then","response","data","articles","catch","error","handleInputChange","event","searchNews","length","handleRequestCategoryNews","categoryName","topHeadlines","filter","item","image","e","map","key","urlToImage","description","NotMatch","pathname","window","location","dataUser","message","SignIn","postLogin","doLogin","login","onSubmit","preventDefault","changeInput","height","backgroundColor","color","mapDispatchToProps","changeInputUser","dispatch","bodyRequest","username","password","post","hasOwnProperty","log","MainRoutes","exact","path","component","Profile","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97e94b93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const initialState = { listNews: [], isLoading: true, search: \"\" };\n\nexport default function newsReducer(stateNews = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_LIST_NEWS_SUCCESS\":\n      return {\n        ...stateNews,\n        isLoading: false,\n        listNews: action.payload,\n      };\n    case \"ACTIVATE_LOADING\":\n      return {\n        ...stateNews,\n        isLoading: true,\n      };\n    default:\n      return stateNews;\n  }\n}\n","const initialState = {\n  full_name: \"\",\n  email: \"\",\n  api_key: \"\",\n  is_login: false,\n  namaPengguna: \"\",\n  kataKunci: \"\",\n};\n\nexport default function userReducer(userState = initialState, action) {\n  switch (action.type) {\n    case \"CHANGE_INPUT_USER\":\n      return {\n        ...userState,\n        [action.payload.target.name]: action.payload.target.value,\n      };\n    case \"SUCCESS_LOGIN\":\n      return {\n        ...userState,\n        full_name: action.payload.full_name,\n        email: action.payload.email,\n        api_key: action.payload.api_key,\n        is_login: true,\n      };\n\n    default:\n      return userState;\n  }\n}\n","import redux, { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport newsReducer from \"./reducer/newsReducer\";\nimport userReducer from \"./reducer/userReducer\";\n\nconst rootReducer = combineReducers({\n  news: newsReducer,\n  user: userReducer,\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.subscribe(() => console.warn(\"cek state store\", store.getState()));\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = props => {\n  return (\n    <section className=\"topsection\">\n      <h4>{props.title}</h4>\n      <form action=\"#\">\n        <input\n          type=\"text\"\n          name=\"search\"\n          id=\"search\"\n          placeholder={props.placeholder}\n          onChange={props.doSearch}\n          value={props.keyword}\n        />\n      </form>\n    </section>\n  );\n};\n\nSearch.propTypes = {\n  title: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../logo.svg\";\nimport Search from \"./Search\";\n\nconst logoWrapper = {\n  display: \"block\",\n  width: \"100px\",\n  float: \"left\",\n  textAlign: \"center\",\n};\n\nclass Navigation extends React.Component {\n  // function to change router by category news\n  changeRouter = async (category) => {\n    // condition when handleRouter undefined/not\n    if (this.props.handleRouter) {\n      this.props.handleRouter(category);\n    } else {\n      // redirect pages to endpoint news-category\n      await this.props.history.replace(\"/news-category/\" + category);\n    }\n  };\n\n  // function to do logout\n  postSignout = () => {\n    localStorage.removeItem(\"is_login\");\n    this.props.history.push(\"/\");\n  };\n  render() {\n    return (\n      <nav id=\"topnav\">\n        <div style={logoWrapper}>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" /> <b>ReactNews</b>\n        </div>\n        <ul id=\"topmenu\">\n          <li className=\"menu\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"menu\">\n            <Link to=\"/signup\">SignUp</Link>\n          </li>\n          <li className=\"menu\">\n            <Link to=\"/signin\">SignIn</Link>\n          </li>\n          <li className=\"menu\">\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li className=\"menu\">\n            <Link onClick={this.postSignout}>SignOut</Link>\n          </li>\n          <li className=\"menu\">\n            <Link\n              to=\"/news\"\n              onClick={this.props.getNews ? () => this.props.getNews() : null}\n            >\n              News\n            </Link>\n          </li>\n          <li\n            className=\"menu\"\n            value=\"sport\"\n            onClick={() => this.changeRouter(\"sports\")}\n          >\n            Olah Raga\n          </li>\n          <li\n            className=\"menu\"\n            value=\"business\"\n            onClick={() => this.changeRouter(\"business\")}\n          >\n            Bisnis\n          </li>\n          <Search {...this.props} />\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"../component/Navigation\";\nimport { connect } from \"react-redux\";\n\nclass Home extends React.Component {\n  render() {\n    console.warn(\"Cek props masuk\", this.props);\n\n    return (\n      <React.Fragment>\n        <Navigation {...this.props} />\n        <section className=\"content\">\n          <h1 style={{ textalign: \"center\" }}>This Is Home</h1>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    haha: state,\n  };\n};\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { useParams } from \"react-router-dom\";\n\nconst style = {\n  maxWidth: \"180px\",\n};\n\nconst ListNews = (props) => {\n  // const { category } = useParams();\n  // console.warn(\"cek category stateless\", category);\n  // console.warn(\"cek props pada list news\", props);\n  const url = props.url !== null || props.url !== \"\" ? props.url : \"#\";\n  const target =\n    props.url !== null || props.url !== \"\" ? { target: \"_blank\" } : \"\";\n  return (\n    <section className=\"content\">\n      <h3>\n        <a href={url} {...target}>\n          {props.title}\n        </a>\n      </h3>\n      <img\n        style={style}\n        src={props.img}\n        alt=\"img_teaser\"\n        className=\"img_teaser\"\n      />\n      <div className=\"right\">{props.content}</div>\n    </section>\n  );\n};\n\nListNews.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  img: PropTypes.string,\n};\n\nexport default ListNews;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// Custom components\nimport ListNews from \"../component/ListNews\";\nimport Navigation from \"../component/Navigation\";\n\n// News API\nconst apiKey = \"44687f6f58184f6385947cb55a41ac62\";\nconst baseUrl = \"https://newsapi.org/v2/\";\nconst urlHeadline = baseUrl + \"top-headlines?country=id&apiKey=\" + apiKey;\n\nclass News extends Component {\n  state = {\n    listNews: [],\n    isLoading: true,\n    search: \"\",\n  };\n\n  componentDidMount = async () => {\n    // get params from url\n    const paramCategory = await this.props.match.params.category;\n\n    // get news from api\n    this.getNews(paramCategory);\n  };\n\n  // function get list news from api\n  getNews = async (category) => {\n    // set condition if params url undefined\n    let url;\n    if (category) {\n      url = urlHeadline + \"&category=\" + category;\n    } else {\n      url = urlHeadline;\n    }\n\n    // activate loading\n    await this.setState({ isLoading: true });\n\n    // request data from api\n    axios\n      .get(url)\n      .then((response) => {\n        this.setState({ listNews: response.data.articles, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  // function to handle input user when change value on field search\n  handleInputChange = async (event) => {\n    let value = event.target.value;\n    await this.setState({ search: value });\n    this.searchNews(value);\n  };\n\n  // function to do search news when keyword more than 2 digit\n  searchNews = async (keyword) => {\n    if (keyword.length > 2) {\n      // activate loading\n      await this.setState({ isLoading: true });\n      try {\n        const response = await axios.get(\n          baseUrl + \"everything?q=\" + keyword + \"&apiKey=\" + apiKey\n        );\n        this.setState({ listNews: response.data.articles, isLoading: false });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  // function to change router and request news by category\n  handleRequestCategoryNews = async (categoryName) => {\n    // redirect pages to endpoint news-category\n    await this.props.history.replace(\"/news-category/\" + categoryName);\n\n    // activate loading\n    await this.setState({ isLoading: true });\n\n    // get params from url\n    const paramCategory = await this.props.match.params.category;\n\n    // request news by category\n    await axios\n      .get(urlHeadline + \"&category=\" + paramCategory)\n      .then((response) => {\n        this.setState({ listNews: response.data.articles, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    // console.warn(\"cek props pada news\", this.props);\n    const { listNews, isLoading } = this.state;\n    const topHeadlines = listNews.filter((item) => {\n      if (item.content !== null && item.image !== null) {\n        return item;\n      }\n      return false;\n    });\n\n    return (\n      <React.Fragment>\n        <Navigation\n          doSearch={(event) => this.handleInputChange(event)}\n          handleRouter={(e) => this.handleRequestCategoryNews(e)}\n          getNews={() => this.getNews()}\n          keyword={this.state.search}\n          placeholder=\"ketik sesuatu\"\n          {...this.props}\n        />\n        <div className=\"headlineNews\">\n          {isLoading ? (\n            <div style={{ textAlign: \"center\" }}>Masih Loading ya...</div>\n          ) : (\n            <div>\n              {topHeadlines.map((item, key) => (\n                <ListNews\n                  key={key}\n                  title={item.title}\n                  img={item.urlToImage}\n                  content={item.description}\n                  url={item.url}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default News;\n","import React from \"react\";\nimport Navigation from \"../component/Navigation\";\n\nconst NotMatch = (props) => {\n  const pathname = window.location.pathname;\n\n  return (\n    <React.Fragment>\n      <Navigation {...props} />\n      <section className=\"content\">\n        <h4>Not found</h4>\n        <p>\n          page: <b>{pathname}</b> you're looking for not found\n        </p>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default NotMatch;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Navigation from \"../component/Navigation\";\nimport { connect } from \"react-redux\";\n\nconst Profile = (props) => {\n  // set condition when status login == null, redirect to signin and show profile when is login is not null\n  if (!props.dataUser.is_login) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/signin\",\n          state: { message: \"gagal login ya..\" },\n        }}\n      />\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Navigation {...props} />\n        <section className=\"content\">\n          <h1\n            style={{\n              textalign: \"center\",\n            }}\n          >\n            Profile\n          </h1>\n          <p>\n            <label>Email:</label> {props.dataUser.email}\n          </p>\n          <p>\n            <label>Full Name:</label> {props.dataUser.full_name}\n          </p>\n        </section>\n      </React.Fragment>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    dataUser: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"../component/Navigation\";\nimport { bindActionCreators } from \"redux\";\nimport { doLogin, changeInputUser } from \"../redux/actions/actionUser\";\n\nclass SignIn extends Component {\n  postLogin = async () => {\n    // const loginBefore = this.props.login;\n    await this.props.doLogin();\n    const is_login = this.props.login;\n    if (is_login) {\n      this.props.history.push(\"/profile\");\n    }\n  };\n  render() {\n    console.warn(\"Cek own props\", this.props);\n\n    const message = this.props.location.state\n      ? this.props.location.state.message\n      : \"tidak ada parameter\";\n\n    return (\n      <React.Fragment>\n        <Navigation {...this.props} />\n        <section className=\"content signin\">\n          <form onSubmit={(e) => e.preventDefault()}>\n            <h4>SignIn</h4>\n            <div>\n              <input\n                type=\"text\"\n                name=\"namaPengguna\"\n                placeholder=\"Username\"\n                onChange={(e) => this.props.changeInput(e)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                name=\"kataKunci\"\n                placeholder=\"Password\"\n                onChange={(e) => this.props.changeInput(e)}\n              />\n            </div>\n            <button\n              style={{\n                height: \"30px\",\n                width: \"50px\",\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n              onClick={() => this.postLogin()}\n            >\n              SignIn\n            </button>\n            <button\n              style={{\n                height: \"30px\",\n                width: \"50px\",\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n              type=\"reset\"\n            >\n              Reset\n            </button>\n            <p style={{ color: \"red\" }}>{message}</p>\n          </form>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    namaPengguna: state.user.namaPengguna,\n    kataKunci: state.user.kataKunci,\n    login: state.user.is_login,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     changeInput: (e) => dispatch({ type: \"CHANGE_INPUT_USER\", payload: e }),\n//     doLogin: bindActionCreators(doLogin, dispatch),\n//   };\n// };\n\nconst mapDispatchToProps = {\n  changeInput: (e) => changeInputUser(e),\n  doLogin: doLogin,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import axios from \"axios\";\n\nexport const doLogin = (props) => {\n  return async (dispatch, getState) => {\n    const bodyRequest = {\n      username: getState().user.namaPengguna,\n      password: getState().user.kataKunci,\n    };\n\n    await axios\n      .post(\"https://atareact.free.beeceptor.com/auth\", bodyRequest)\n      .then(async (response) => {\n        if (response.data.hasOwnProperty(\"api_key\")) {\n          dispatch({ type: \"SUCCESS_LOGIN\", payload: response.data });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\nexport const changeInputUser = (e) => {\n  return {\n    type: \"CHANGE_INPUT_USER\",\n    payload: e,\n  };\n};\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"../redux\";\n\nimport Home from \"../pages/Home\";\nimport News from \"../pages/News\";\nimport NotMatch from \"../pages/NotMatch\";\nimport Profile from \"../pages/Profile\";\nimport SignIn from \"../pages/SignIn\";\n\nconst MainRoutes = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/news\" component={News} />\n          <Route path=\"/news-category/:category\" component={News} />\n          <Route component={NotMatch} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default MainRoutes;\n","import React from \"react\";\nimport MainRoutes from \"./routes/MainRoutes\";\nimport \"./style/App.css\";\n\nfunction App() {\n  return (\n    <>\n      <MainRoutes />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import { Provider } from \"react-redux\";\n// import store from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    <App />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}